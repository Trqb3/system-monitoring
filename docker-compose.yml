services:
  grafana:
    container_name: ${PROJECT_NAME}-grafana-${PROJECT_VERSION}
    image: grafana/grafana-enterprise:latest
    restart: unless-stopped
    ports:
      - "${GRAFANA_BIND:-0.0.0.0}:${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - cadvisor
      - loki
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_SECURITY_ADMIN_USER: "${GRAFANA_USER}"
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_PASS}"
      GF_SMTP_ENABLED: "${SMTP_ENABLED}"
      GF_SMTP_HOST: "${SMTP_HOST}:${SMTP_PORT}"
      GF_SMTP_USER: "${SMTP_USER}"
      GF_SMTP_PASSWORD: "${SMTP_PASS}"
      GF_SMTP_FROM_ADDRESS: "${SMTP_FROM_ADDRESS}"
      GF_SMTP_FROM_NAME: "${SMTP_FROM_NAME}"
      GF_SMTP_SKIP_VERIFY: "${SMTP_SKIP_VERIFY}"
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          isDefault: true
          basicAuth: false
          version: 1
          editable: false
        
        - name: Loki
          type: loki
          access: proxy
          url: http://loki:3100
          basicAuth: false
          version: 1
          editable: false
        EOF
        /run.sh

  prometheus:
    container_name: ${PROJECT_NAME}-prometheus-${PROJECT_VERSION}
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_BIND:-127.0.0.1}:${PROMETHEUS_PORT}:9090"
    volumes:
      - ./config/prometheus.yml:/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - cadvisor
      - node-exporter
    command: --config.file=/prometheus/prometheus.yml --storage.tsdb.retention.time=7d --web.enable-lifecycle --web.enable-admin-api

  cadvisor:
    container_name: ${PROJECT_NAME}-cadvisor-${PROJECT_VERSION}
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro

  node-exporter:
    container_name: ${PROJECT_NAME}-node-exporter-${PROJECT_VERSION}
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    environment:
      TZ: ${TZ:-UTC}
    command: --path.rootfs=/host
    pid: host

  blackbox-exporter:
    container_name: ${PROJECT_NAME}-blackbox-exporter-${PROJECT_VERSION}
    image: prom/blackbox-exporter:latest
    restart: unless-stopped
    volumes:
      - ./config/blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml

  loki:
    container_name: ${PROJECT_NAME}-loki-${PROJECT_VERSION}
    image: grafana/loki:2.9.0
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    container_name: ${PROJECT_NAME}-promtail-${PROJECT_VERSION}
    image: grafana/promtail:2.9.0
    restart: unless-stopped
    volumes:
      - ./config/promtail.yml:/etc/promtail/promtail.yml
      # - /var/log:/var/log
      # - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - loki
    command: -config.file=/etc/promtail/promtail.yml


volumes:
  grafana_data:
    name: ${PROJECT_NAME}-grafana_data-${PROJECT_VERSION}
  prometheus-data:
    name: ${PROJECT_NAME}-prometheus_data-${PROJECT_VERSION}